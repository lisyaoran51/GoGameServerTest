// This is Proto v3 syntax。

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.8
// source: protobuf/gate.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//// ClientConnect 玩家連線Gate協議
type ClientConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid      string `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`           //產品
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`       //加密後玩家資訊
	GameType string `protobuf:"bytes,3,opt,name=gameType,proto3" json:"gameType,omitempty"` //登入的遊戲類型 //MultiPlayerCrash, StandAlonePlinko
}

func (x *ClientConnectRequest) Reset() {
	*x = ClientConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_gate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientConnectRequest) ProtoMessage() {}

func (x *ClientConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientConnectRequest.ProtoReflect.Descriptor instead.
func (*ClientConnectRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_gate_proto_rawDescGZIP(), []int{0}
}

func (x *ClientConnectRequest) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *ClientConnectRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ClientConnectRequest) GetGameType() string {
	if x != nil {
		return x.GameType
	}
	return ""
}

// ClientConnectResponse 登入用回包
type ClientConnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                    // 成功0  非0為錯誤碼
	Pid            string `protobuf:"bytes,2,opt,name=pid,proto3" json:"pid,omitempty"`                       // 使用者產品線
	Username       string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`             // 使用者名稱
	CryptoCurrency string `protobuf:"bytes,4,opt,name=cryptoCurrency,proto3" json:"cryptoCurrency,omitempty"` // 使用虛擬貨幣
	FiatCurrency   string `protobuf:"bytes,5,opt,name=fiatCurrency,proto3" json:"fiatCurrency,omitempty"`     // 使用法幣 沒使用會是空字串
}

func (x *ClientConnectResponse) Reset() {
	*x = ClientConnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_gate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientConnectResponse) ProtoMessage() {}

func (x *ClientConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientConnectResponse.ProtoReflect.Descriptor instead.
func (*ClientConnectResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_gate_proto_rawDescGZIP(), []int{1}
}

func (x *ClientConnectResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ClientConnectResponse) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *ClientConnectResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ClientConnectResponse) GetCryptoCurrency() string {
	if x != nil {
		return x.CryptoCurrency
	}
	return ""
}

func (x *ClientConnectResponse) GetFiatCurrency() string {
	if x != nil {
		return x.FiatCurrency
	}
	return ""
}

// 玩家跟API請求下注扣款
type CASH_API_BET_DEDUCT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// auxiliary.GameRoundInfo roundinfo = 1;	// gameround 資訊
	Roundinfo   string `protobuf:"bytes,1,opt,name=roundinfo,proto3" json:"roundinfo,omitempty"`
	Currency    string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`       // 幣種
	TransAmount string `protobuf:"bytes,3,opt,name=transAmount,proto3" json:"transAmount,omitempty"` // 交易額度 小數最小只能到0.00000001
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`               // 玩家姓名
	Productid   string `protobuf:"bytes,5,opt,name=productid,proto3" json:"productid,omitempty"`     // 產品編號
	Billno      string `protobuf:"bytes,6,opt,name=billno,proto3" json:"billno,omitempty"`           // 注單號
	Reqpostid   string `protobuf:"bytes,7,opt,name=reqpostid,proto3" json:"reqpostid,omitempty"`     // 給gate組require id用 billno + reqpostid = require id
	Gametype    string `protobuf:"bytes,8,opt,name=gametype,proto3" json:"gametype,omitempty"`       // 遊戲型態
	Timestamp   string `protobuf:"bytes,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`     // 時間戳記
	Token       string `protobuf:"bytes,10,opt,name=token,proto3" json:"token,omitempty"`            // 玩家Token
}

func (x *CASH_API_BET_DEDUCT) Reset() {
	*x = CASH_API_BET_DEDUCT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_gate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CASH_API_BET_DEDUCT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASH_API_BET_DEDUCT) ProtoMessage() {}

func (x *CASH_API_BET_DEDUCT) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASH_API_BET_DEDUCT.ProtoReflect.Descriptor instead.
func (*CASH_API_BET_DEDUCT) Descriptor() ([]byte, []int) {
	return file_protobuf_gate_proto_rawDescGZIP(), []int{2}
}

func (x *CASH_API_BET_DEDUCT) GetRoundinfo() string {
	if x != nil {
		return x.Roundinfo
	}
	return ""
}

func (x *CASH_API_BET_DEDUCT) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CASH_API_BET_DEDUCT) GetTransAmount() string {
	if x != nil {
		return x.TransAmount
	}
	return ""
}

func (x *CASH_API_BET_DEDUCT) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CASH_API_BET_DEDUCT) GetProductid() string {
	if x != nil {
		return x.Productid
	}
	return ""
}

func (x *CASH_API_BET_DEDUCT) GetBillno() string {
	if x != nil {
		return x.Billno
	}
	return ""
}

func (x *CASH_API_BET_DEDUCT) GetReqpostid() string {
	if x != nil {
		return x.Reqpostid
	}
	return ""
}

func (x *CASH_API_BET_DEDUCT) GetGametype() string {
	if x != nil {
		return x.Gametype
	}
	return ""
}

func (x *CASH_API_BET_DEDUCT) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *CASH_API_BET_DEDUCT) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 玩家跟API請求下注扣款回應
type CASH_API_BET_DEDUCT_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// auxiliary.GameRoundInfo roundinfo = 1;	// gameround 資訊
	Roundinfo     string `protobuf:"bytes,1,opt,name=roundinfo,proto3" json:"roundinfo,omitempty"`
	Currency      string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`            // 幣種
	TransAmount   string `protobuf:"bytes,3,opt,name=transAmount,proto3" json:"transAmount,omitempty"`      // 交易額度
	Sourceamount  string `protobuf:"bytes,4,opt,name=sourceamount,proto3" json:"sourceamount,omitempty"`    // 變化前的額度
	Destamount    string `protobuf:"bytes,5,opt,name=destamount,proto3" json:"destamount,omitempty"`        // 玩家最新的額度
	Name          string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`                    // 玩家姓名
	Productid     string `protobuf:"bytes,7,opt,name=productid,proto3" json:"productid,omitempty"`          // 產品編號
	Reqid         string `protobuf:"bytes,8,opt,name=reqid,proto3" json:"reqid,omitempty"`                  // 注單號+req postfix
	Code          uint32 `protobuf:"varint,9,opt,name=code,proto3" json:"code,omitempty"`                   // 結果回應
	Transactionid string `protobuf:"bytes,10,opt,name=transactionid,proto3" json:"transactionid,omitempty"` // api回應的交易序號
	Timestamp     string `protobuf:"bytes,11,opt,name=timestamp,proto3" json:"timestamp,omitempty"`         // 時間戳記
}

func (x *CASH_API_BET_DEDUCT_RES) Reset() {
	*x = CASH_API_BET_DEDUCT_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_gate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CASH_API_BET_DEDUCT_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASH_API_BET_DEDUCT_RES) ProtoMessage() {}

func (x *CASH_API_BET_DEDUCT_RES) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASH_API_BET_DEDUCT_RES.ProtoReflect.Descriptor instead.
func (*CASH_API_BET_DEDUCT_RES) Descriptor() ([]byte, []int) {
	return file_protobuf_gate_proto_rawDescGZIP(), []int{3}
}

func (x *CASH_API_BET_DEDUCT_RES) GetRoundinfo() string {
	if x != nil {
		return x.Roundinfo
	}
	return ""
}

func (x *CASH_API_BET_DEDUCT_RES) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CASH_API_BET_DEDUCT_RES) GetTransAmount() string {
	if x != nil {
		return x.TransAmount
	}
	return ""
}

func (x *CASH_API_BET_DEDUCT_RES) GetSourceamount() string {
	if x != nil {
		return x.Sourceamount
	}
	return ""
}

func (x *CASH_API_BET_DEDUCT_RES) GetDestamount() string {
	if x != nil {
		return x.Destamount
	}
	return ""
}

func (x *CASH_API_BET_DEDUCT_RES) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CASH_API_BET_DEDUCT_RES) GetProductid() string {
	if x != nil {
		return x.Productid
	}
	return ""
}

func (x *CASH_API_BET_DEDUCT_RES) GetReqid() string {
	if x != nil {
		return x.Reqid
	}
	return ""
}

func (x *CASH_API_BET_DEDUCT_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CASH_API_BET_DEDUCT_RES) GetTransactionid() string {
	if x != nil {
		return x.Transactionid
	}
	return ""
}

func (x *CASH_API_BET_DEDUCT_RES) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

// 玩家跟API請求 增加贏錢
type CASH_API_WIN_ACCOUNT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// auxiliary.GameRoundInfo roundinfo = 1;	// gameround 資訊
	Roundinfo   string `protobuf:"bytes,1,opt,name=roundinfo,proto3" json:"roundinfo,omitempty"`
	Currency    string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`       // 幣種
	TransAmount string `protobuf:"bytes,3,opt,name=transAmount,proto3" json:"transAmount,omitempty"` // 交易額度 小數最小只能到0.00000001
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`               // 玩家姓名
	Productid   string `protobuf:"bytes,5,opt,name=productid,proto3" json:"productid,omitempty"`     // 產品編號
	Billno      string `protobuf:"bytes,6,opt,name=billno,proto3" json:"billno,omitempty"`           // 注單號
	Reqpostid   string `protobuf:"bytes,7,opt,name=reqpostid,proto3" json:"reqpostid,omitempty"`     // 給gate組require id用 billno + reqpostid = require id
	Gametype    string `protobuf:"bytes,8,opt,name=gametype,proto3" json:"gametype,omitempty"`       // 遊戲型態
	Timestamp   string `protobuf:"bytes,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`     // 時間戳記
	Token       string `protobuf:"bytes,10,opt,name=token,proto3" json:"token,omitempty"`            // 玩家Token
}

func (x *CASH_API_WIN_ACCOUNT) Reset() {
	*x = CASH_API_WIN_ACCOUNT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_gate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CASH_API_WIN_ACCOUNT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASH_API_WIN_ACCOUNT) ProtoMessage() {}

func (x *CASH_API_WIN_ACCOUNT) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASH_API_WIN_ACCOUNT.ProtoReflect.Descriptor instead.
func (*CASH_API_WIN_ACCOUNT) Descriptor() ([]byte, []int) {
	return file_protobuf_gate_proto_rawDescGZIP(), []int{4}
}

func (x *CASH_API_WIN_ACCOUNT) GetRoundinfo() string {
	if x != nil {
		return x.Roundinfo
	}
	return ""
}

func (x *CASH_API_WIN_ACCOUNT) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CASH_API_WIN_ACCOUNT) GetTransAmount() string {
	if x != nil {
		return x.TransAmount
	}
	return ""
}

func (x *CASH_API_WIN_ACCOUNT) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CASH_API_WIN_ACCOUNT) GetProductid() string {
	if x != nil {
		return x.Productid
	}
	return ""
}

func (x *CASH_API_WIN_ACCOUNT) GetBillno() string {
	if x != nil {
		return x.Billno
	}
	return ""
}

func (x *CASH_API_WIN_ACCOUNT) GetReqpostid() string {
	if x != nil {
		return x.Reqpostid
	}
	return ""
}

func (x *CASH_API_WIN_ACCOUNT) GetGametype() string {
	if x != nil {
		return x.Gametype
	}
	return ""
}

func (x *CASH_API_WIN_ACCOUNT) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *CASH_API_WIN_ACCOUNT) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 玩家跟API請求 增加贏錢回應
type CASH_API_WIN_ACCOUNT_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// auxiliary.GameRoundInfo roundinfo = 1;	// gameround 資訊
	Roundinfo     string `protobuf:"bytes,1,opt,name=roundinfo,proto3" json:"roundinfo,omitempty"`
	Currency      string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`            // 幣種
	TransAmount   string `protobuf:"bytes,3,opt,name=transAmount,proto3" json:"transAmount,omitempty"`      // 交易額度
	Sourceamount  string `protobuf:"bytes,4,opt,name=sourceamount,proto3" json:"sourceamount,omitempty"`    // 變化前的額度
	Destamount    string `protobuf:"bytes,5,opt,name=destamount,proto3" json:"destamount,omitempty"`        // 玩家最新的額度
	Name          string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`                    // 玩家姓名
	Productid     string `protobuf:"bytes,7,opt,name=productid,proto3" json:"productid,omitempty"`          // 產品編號
	Reqid         string `protobuf:"bytes,8,opt,name=reqid,proto3" json:"reqid,omitempty"`                  // 注單號+req postfix
	Code          uint32 `protobuf:"varint,9,opt,name=code,proto3" json:"code,omitempty"`                   // 結果回應
	Transactionid string `protobuf:"bytes,10,opt,name=transactionid,proto3" json:"transactionid,omitempty"` // api回應的交易序號
	Token         string `protobuf:"bytes,11,opt,name=token,proto3" json:"token,omitempty"`                 // 玩家Token
	Timestamp     string `protobuf:"bytes,12,opt,name=timestamp,proto3" json:"timestamp,omitempty"`         // 時間戳記
}

func (x *CASH_API_WIN_ACCOUNT_RES) Reset() {
	*x = CASH_API_WIN_ACCOUNT_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_gate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CASH_API_WIN_ACCOUNT_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASH_API_WIN_ACCOUNT_RES) ProtoMessage() {}

func (x *CASH_API_WIN_ACCOUNT_RES) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASH_API_WIN_ACCOUNT_RES.ProtoReflect.Descriptor instead.
func (*CASH_API_WIN_ACCOUNT_RES) Descriptor() ([]byte, []int) {
	return file_protobuf_gate_proto_rawDescGZIP(), []int{5}
}

func (x *CASH_API_WIN_ACCOUNT_RES) GetRoundinfo() string {
	if x != nil {
		return x.Roundinfo
	}
	return ""
}

func (x *CASH_API_WIN_ACCOUNT_RES) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CASH_API_WIN_ACCOUNT_RES) GetTransAmount() string {
	if x != nil {
		return x.TransAmount
	}
	return ""
}

func (x *CASH_API_WIN_ACCOUNT_RES) GetSourceamount() string {
	if x != nil {
		return x.Sourceamount
	}
	return ""
}

func (x *CASH_API_WIN_ACCOUNT_RES) GetDestamount() string {
	if x != nil {
		return x.Destamount
	}
	return ""
}

func (x *CASH_API_WIN_ACCOUNT_RES) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CASH_API_WIN_ACCOUNT_RES) GetProductid() string {
	if x != nil {
		return x.Productid
	}
	return ""
}

func (x *CASH_API_WIN_ACCOUNT_RES) GetReqid() string {
	if x != nil {
		return x.Reqid
	}
	return ""
}

func (x *CASH_API_WIN_ACCOUNT_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CASH_API_WIN_ACCOUNT_RES) GetTransactionid() string {
	if x != nil {
		return x.Transactionid
	}
	return ""
}

func (x *CASH_API_WIN_ACCOUNT_RES) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CASH_API_WIN_ACCOUNT_RES) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

// 玩家跟API請求 請求回滾款項（退款）
type CASH_API_ROLLBACK_ACCOUNT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// auxiliary.GameRoundInfo roundinfo = 1;	// gameround 資訊
	Roundinfo           string `protobuf:"bytes,1,opt,name=roundinfo,proto3" json:"roundinfo,omitempty"`
	Billno              string `protobuf:"bytes,2,opt,name=billno,proto3" json:"billno,omitempty"`                            // 注單號
	Reqpostid           string `protobuf:"bytes,3,opt,name=reqpostid,proto3" json:"reqpostid,omitempty"`                      // 給gate組require id用 billno + reqpostid = require id
	Name                string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                // 玩家姓名
	Productid           string `protobuf:"bytes,5,opt,name=productid,proto3" json:"productid,omitempty"`                      // 產品編號
	Gametype            string `protobuf:"bytes,6,opt,name=gametype,proto3" json:"gametype,omitempty"`                        // 遊戲型態
	Transactionid       string `protobuf:"bytes,7,opt,name=transactionid,proto3" json:"transactionid,omitempty"`              // 請求取消的交易編號
	Timestamp           string `protobuf:"bytes,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                      // 時間戳記
	Token               string `protobuf:"bytes,9,opt,name=token,proto3" json:"token,omitempty"`                              // 玩家Token
	PreviousTransAmount string `protobuf:"bytes,10,opt,name=previousTransAmount,proto3" json:"previousTransAmount,omitempty"` // 先前交易額度 原本轉帳時的交易額度，rollback會依這個額度回滾，小數最小只能到0.00000001
}

func (x *CASH_API_ROLLBACK_ACCOUNT) Reset() {
	*x = CASH_API_ROLLBACK_ACCOUNT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_gate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CASH_API_ROLLBACK_ACCOUNT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASH_API_ROLLBACK_ACCOUNT) ProtoMessage() {}

func (x *CASH_API_ROLLBACK_ACCOUNT) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASH_API_ROLLBACK_ACCOUNT.ProtoReflect.Descriptor instead.
func (*CASH_API_ROLLBACK_ACCOUNT) Descriptor() ([]byte, []int) {
	return file_protobuf_gate_proto_rawDescGZIP(), []int{6}
}

func (x *CASH_API_ROLLBACK_ACCOUNT) GetRoundinfo() string {
	if x != nil {
		return x.Roundinfo
	}
	return ""
}

func (x *CASH_API_ROLLBACK_ACCOUNT) GetBillno() string {
	if x != nil {
		return x.Billno
	}
	return ""
}

func (x *CASH_API_ROLLBACK_ACCOUNT) GetReqpostid() string {
	if x != nil {
		return x.Reqpostid
	}
	return ""
}

func (x *CASH_API_ROLLBACK_ACCOUNT) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CASH_API_ROLLBACK_ACCOUNT) GetProductid() string {
	if x != nil {
		return x.Productid
	}
	return ""
}

func (x *CASH_API_ROLLBACK_ACCOUNT) GetGametype() string {
	if x != nil {
		return x.Gametype
	}
	return ""
}

func (x *CASH_API_ROLLBACK_ACCOUNT) GetTransactionid() string {
	if x != nil {
		return x.Transactionid
	}
	return ""
}

func (x *CASH_API_ROLLBACK_ACCOUNT) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *CASH_API_ROLLBACK_ACCOUNT) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CASH_API_ROLLBACK_ACCOUNT) GetPreviousTransAmount() string {
	if x != nil {
		return x.PreviousTransAmount
	}
	return ""
}

// 玩家跟API請求 請求回滾款項（退款）回應
type CASH_API_ROLLBACK_ACCOUNT_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// auxiliary.GameRoundInfo roundinfo = 1;	// gameround 資訊
	Roundinfo     string `protobuf:"bytes,1,opt,name=roundinfo,proto3" json:"roundinfo,omitempty"`
	Currency      string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`            // 幣種
	TransAmount   string `protobuf:"bytes,3,opt,name=transAmount,proto3" json:"transAmount,omitempty"`      // 金額 小數最小只能到0.00000001
	Name          string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                    // 玩家姓名
	Productid     string `protobuf:"bytes,5,opt,name=productid,proto3" json:"productid,omitempty"`          // 產品編號
	Billno        string `protobuf:"bytes,6,opt,name=billno,proto3" json:"billno,omitempty"`                // 注單號
	Code          uint32 `protobuf:"varint,7,opt,name=code,proto3" json:"code,omitempty"`                   // 結果回應
	Currentamount string `protobuf:"bytes,8,opt,name=currentamount,proto3" json:"currentamount,omitempty"`  // 玩家最新的額度
	Preamount     string `protobuf:"bytes,9,opt,name=preamount,proto3" json:"preamount,omitempty"`          // 變化前的額度
	Transactionid string `protobuf:"bytes,10,opt,name=transactionid,proto3" json:"transactionid,omitempty"` // 次rollback對應的交易序號
	Timestamp     string `protobuf:"bytes,11,opt,name=timestamp,proto3" json:"timestamp,omitempty"`         // 時間戳記
}

func (x *CASH_API_ROLLBACK_ACCOUNT_RES) Reset() {
	*x = CASH_API_ROLLBACK_ACCOUNT_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_gate_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CASH_API_ROLLBACK_ACCOUNT_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASH_API_ROLLBACK_ACCOUNT_RES) ProtoMessage() {}

func (x *CASH_API_ROLLBACK_ACCOUNT_RES) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gate_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASH_API_ROLLBACK_ACCOUNT_RES.ProtoReflect.Descriptor instead.
func (*CASH_API_ROLLBACK_ACCOUNT_RES) Descriptor() ([]byte, []int) {
	return file_protobuf_gate_proto_rawDescGZIP(), []int{7}
}

func (x *CASH_API_ROLLBACK_ACCOUNT_RES) GetRoundinfo() string {
	if x != nil {
		return x.Roundinfo
	}
	return ""
}

func (x *CASH_API_ROLLBACK_ACCOUNT_RES) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CASH_API_ROLLBACK_ACCOUNT_RES) GetTransAmount() string {
	if x != nil {
		return x.TransAmount
	}
	return ""
}

func (x *CASH_API_ROLLBACK_ACCOUNT_RES) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CASH_API_ROLLBACK_ACCOUNT_RES) GetProductid() string {
	if x != nil {
		return x.Productid
	}
	return ""
}

func (x *CASH_API_ROLLBACK_ACCOUNT_RES) GetBillno() string {
	if x != nil {
		return x.Billno
	}
	return ""
}

func (x *CASH_API_ROLLBACK_ACCOUNT_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CASH_API_ROLLBACK_ACCOUNT_RES) GetCurrentamount() string {
	if x != nil {
		return x.Currentamount
	}
	return ""
}

func (x *CASH_API_ROLLBACK_ACCOUNT_RES) GetPreamount() string {
	if x != nil {
		return x.Preamount
	}
	return ""
}

func (x *CASH_API_ROLLBACK_ACCOUNT_RES) GetTransactionid() string {
	if x != nil {
		return x.Transactionid
	}
	return ""
}

func (x *CASH_API_ROLLBACK_ACCOUNT_RES) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

// 玩家跟API請求 請求退款（取消）
type CASH_API_CANCEL_ACCOUNT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// auxiliary.GameRoundInfo roundinfo = 1;	// gameround 資訊
	Roundinfo   string `protobuf:"bytes,1,opt,name=roundinfo,proto3" json:"roundinfo,omitempty"`
	Currency    string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`       // 幣種
	TransAmount string `protobuf:"bytes,3,opt,name=transAmount,proto3" json:"transAmount,omitempty"` // 交易額度 小數最小只能到0.00000001
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`               // 玩家姓名
	Productid   string `protobuf:"bytes,5,opt,name=productid,proto3" json:"productid,omitempty"`     // 產品編號
	Billno      string `protobuf:"bytes,6,opt,name=billno,proto3" json:"billno,omitempty"`           // 注單號
	Reqpostid   string `protobuf:"bytes,7,opt,name=reqpostid,proto3" json:"reqpostid,omitempty"`     // 給gate組require id用 billno + reqpostid = require id
	Gametype    string `protobuf:"bytes,8,opt,name=gametype,proto3" json:"gametype,omitempty"`       // 遊戲型態
	Timestamp   string `protobuf:"bytes,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`     // 時間戳記
	Token       string `protobuf:"bytes,10,opt,name=token,proto3" json:"token,omitempty"`            // 玩家Token
}

func (x *CASH_API_CANCEL_ACCOUNT) Reset() {
	*x = CASH_API_CANCEL_ACCOUNT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_gate_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CASH_API_CANCEL_ACCOUNT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASH_API_CANCEL_ACCOUNT) ProtoMessage() {}

func (x *CASH_API_CANCEL_ACCOUNT) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gate_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASH_API_CANCEL_ACCOUNT.ProtoReflect.Descriptor instead.
func (*CASH_API_CANCEL_ACCOUNT) Descriptor() ([]byte, []int) {
	return file_protobuf_gate_proto_rawDescGZIP(), []int{8}
}

func (x *CASH_API_CANCEL_ACCOUNT) GetRoundinfo() string {
	if x != nil {
		return x.Roundinfo
	}
	return ""
}

func (x *CASH_API_CANCEL_ACCOUNT) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CASH_API_CANCEL_ACCOUNT) GetTransAmount() string {
	if x != nil {
		return x.TransAmount
	}
	return ""
}

func (x *CASH_API_CANCEL_ACCOUNT) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CASH_API_CANCEL_ACCOUNT) GetProductid() string {
	if x != nil {
		return x.Productid
	}
	return ""
}

func (x *CASH_API_CANCEL_ACCOUNT) GetBillno() string {
	if x != nil {
		return x.Billno
	}
	return ""
}

func (x *CASH_API_CANCEL_ACCOUNT) GetReqpostid() string {
	if x != nil {
		return x.Reqpostid
	}
	return ""
}

func (x *CASH_API_CANCEL_ACCOUNT) GetGametype() string {
	if x != nil {
		return x.Gametype
	}
	return ""
}

func (x *CASH_API_CANCEL_ACCOUNT) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *CASH_API_CANCEL_ACCOUNT) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 玩家跟API請求 請求退款（取消）回應
type CASH_API_CANCEL_ACCOUNT_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// auxiliary.GameRoundInfo roundinfo = 1;	// gameround 資訊
	Roundinfo     string `protobuf:"bytes,1,opt,name=roundinfo,proto3" json:"roundinfo,omitempty"`
	Currency      string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`            // 幣種
	TransAmount   string `protobuf:"bytes,3,opt,name=transAmount,proto3" json:"transAmount,omitempty"`      // 交易額度
	Sourceamount  string `protobuf:"bytes,4,opt,name=sourceamount,proto3" json:"sourceamount,omitempty"`    // 變化前的額度
	Destamount    string `protobuf:"bytes,5,opt,name=destamount,proto3" json:"destamount,omitempty"`        // 玩家最新的額度
	Name          string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`                    // 玩家姓名
	Productid     string `protobuf:"bytes,7,opt,name=productid,proto3" json:"productid,omitempty"`          // 產品編號
	Reqid         string `protobuf:"bytes,8,opt,name=reqid,proto3" json:"reqid,omitempty"`                  // 注單號+req postfix
	Code          uint32 `protobuf:"varint,9,opt,name=code,proto3" json:"code,omitempty"`                   // 結果回應
	Transactionid string `protobuf:"bytes,10,opt,name=transactionid,proto3" json:"transactionid,omitempty"` // api回應的交易序號
	Timestamp     string `protobuf:"bytes,11,opt,name=timestamp,proto3" json:"timestamp,omitempty"`         // 時間戳記
}

func (x *CASH_API_CANCEL_ACCOUNT_RES) Reset() {
	*x = CASH_API_CANCEL_ACCOUNT_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_gate_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CASH_API_CANCEL_ACCOUNT_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASH_API_CANCEL_ACCOUNT_RES) ProtoMessage() {}

func (x *CASH_API_CANCEL_ACCOUNT_RES) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gate_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASH_API_CANCEL_ACCOUNT_RES.ProtoReflect.Descriptor instead.
func (*CASH_API_CANCEL_ACCOUNT_RES) Descriptor() ([]byte, []int) {
	return file_protobuf_gate_proto_rawDescGZIP(), []int{9}
}

func (x *CASH_API_CANCEL_ACCOUNT_RES) GetRoundinfo() string {
	if x != nil {
		return x.Roundinfo
	}
	return ""
}

func (x *CASH_API_CANCEL_ACCOUNT_RES) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CASH_API_CANCEL_ACCOUNT_RES) GetTransAmount() string {
	if x != nil {
		return x.TransAmount
	}
	return ""
}

func (x *CASH_API_CANCEL_ACCOUNT_RES) GetSourceamount() string {
	if x != nil {
		return x.Sourceamount
	}
	return ""
}

func (x *CASH_API_CANCEL_ACCOUNT_RES) GetDestamount() string {
	if x != nil {
		return x.Destamount
	}
	return ""
}

func (x *CASH_API_CANCEL_ACCOUNT_RES) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CASH_API_CANCEL_ACCOUNT_RES) GetProductid() string {
	if x != nil {
		return x.Productid
	}
	return ""
}

func (x *CASH_API_CANCEL_ACCOUNT_RES) GetReqid() string {
	if x != nil {
		return x.Reqid
	}
	return ""
}

func (x *CASH_API_CANCEL_ACCOUNT_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CASH_API_CANCEL_ACCOUNT_RES) GetTransactionid() string {
	if x != nil {
		return x.Transactionid
	}
	return ""
}

func (x *CASH_API_CANCEL_ACCOUNT_RES) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

// 玩家跟API請求 查詢貨幣列表
type CASH_API_QUERY_CURRENCY_LIST struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Productid string `protobuf:"bytes,1,opt,name=productid,proto3" json:"productid,omitempty"` // 產品編號
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`           // 玩家姓名
	Token     string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`         // 玩家Token
}

func (x *CASH_API_QUERY_CURRENCY_LIST) Reset() {
	*x = CASH_API_QUERY_CURRENCY_LIST{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_gate_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CASH_API_QUERY_CURRENCY_LIST) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASH_API_QUERY_CURRENCY_LIST) ProtoMessage() {}

func (x *CASH_API_QUERY_CURRENCY_LIST) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gate_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASH_API_QUERY_CURRENCY_LIST.ProtoReflect.Descriptor instead.
func (*CASH_API_QUERY_CURRENCY_LIST) Descriptor() ([]byte, []int) {
	return file_protobuf_gate_proto_rawDescGZIP(), []int{10}
}

func (x *CASH_API_QUERY_CURRENCY_LIST) GetProductid() string {
	if x != nil {
		return x.Productid
	}
	return ""
}

func (x *CASH_API_QUERY_CURRENCY_LIST) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CASH_API_QUERY_CURRENCY_LIST) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 玩家跟API請求 查詢貨幣列表回應
type CASH_API_QUERY_CURRENCY_LIST_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency  []*CASH_API_QUERY_CURRENCY_LIST_RES_CurrencyData `protobuf:"bytes,1,rep,name=currency,proto3" json:"currency,omitempty"`   // 用戶身上的貨幣類別
	Name      string                                           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`           // 玩家姓名
	Productid string                                           `protobuf:"bytes,3,opt,name=productid,proto3" json:"productid,omitempty"` // 產品編號
	Code      uint32                                           `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`          // 結果回應
	Timestamp string                                           `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // 時間戳記
}

func (x *CASH_API_QUERY_CURRENCY_LIST_RES) Reset() {
	*x = CASH_API_QUERY_CURRENCY_LIST_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_gate_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CASH_API_QUERY_CURRENCY_LIST_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASH_API_QUERY_CURRENCY_LIST_RES) ProtoMessage() {}

func (x *CASH_API_QUERY_CURRENCY_LIST_RES) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gate_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASH_API_QUERY_CURRENCY_LIST_RES.ProtoReflect.Descriptor instead.
func (*CASH_API_QUERY_CURRENCY_LIST_RES) Descriptor() ([]byte, []int) {
	return file_protobuf_gate_proto_rawDescGZIP(), []int{11}
}

func (x *CASH_API_QUERY_CURRENCY_LIST_RES) GetCurrency() []*CASH_API_QUERY_CURRENCY_LIST_RES_CurrencyData {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *CASH_API_QUERY_CURRENCY_LIST_RES) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CASH_API_QUERY_CURRENCY_LIST_RES) GetProductid() string {
	if x != nil {
		return x.Productid
	}
	return ""
}

func (x *CASH_API_QUERY_CURRENCY_LIST_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CASH_API_QUERY_CURRENCY_LIST_RES) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type CASH_API_QUERY_CURRENCY_LIST_RES_CurrencyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyType string `protobuf:"bytes,1,opt,name=currencyType,proto3" json:"currencyType,omitempty"` //貨幣種類
	Amount       string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`             //貨幣數量
}

func (x *CASH_API_QUERY_CURRENCY_LIST_RES_CurrencyData) Reset() {
	*x = CASH_API_QUERY_CURRENCY_LIST_RES_CurrencyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_gate_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CASH_API_QUERY_CURRENCY_LIST_RES_CurrencyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASH_API_QUERY_CURRENCY_LIST_RES_CurrencyData) ProtoMessage() {}

func (x *CASH_API_QUERY_CURRENCY_LIST_RES_CurrencyData) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gate_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASH_API_QUERY_CURRENCY_LIST_RES_CurrencyData.ProtoReflect.Descriptor instead.
func (*CASH_API_QUERY_CURRENCY_LIST_RES_CurrencyData) Descriptor() ([]byte, []int) {
	return file_protobuf_gate_proto_rawDescGZIP(), []int{11, 0}
}

func (x *CASH_API_QUERY_CURRENCY_LIST_RES_CurrencyData) GetCurrencyType() string {
	if x != nil {
		return x.CurrencyType
	}
	return ""
}

func (x *CASH_API_QUERY_CURRENCY_LIST_RES_CurrencyData) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

var File_protobuf_gate_proto protoreflect.FileDescriptor

var file_protobuf_gate_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x22,
	0x5a, 0x0a, 0x14, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x15,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x66, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x22, 0xa9, 0x02, 0x0a, 0x13, 0x43, 0x41, 0x53, 0x48, 0x5f, 0x41, 0x50, 0x49,
	0x5f, 0x42, 0x45, 0x54, 0x5f, 0x44, 0x45, 0x44, 0x55, 0x43, 0x54, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6c,
	0x6c, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x6e,
	0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x70, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x70, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0xd9, 0x02, 0x0a, 0x17, 0x43, 0x41, 0x53, 0x48, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x42, 0x45, 0x54,
	0x5f, 0x44, 0x45, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x65, 0x71, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65,
	0x71, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xaa, 0x02, 0x0a, 0x14,
	0x43, 0x41, 0x53, 0x48, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x57, 0x49, 0x4e, 0x5f, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x6e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x71, 0x70, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x70, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xf0, 0x02, 0x0a, 0x18, 0x43, 0x41, 0x53,
	0x48, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x57, 0x49, 0x4e, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x71, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x71, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xc9, 0x02, 0x0a, 0x19,
	0x43, 0x41, 0x53, 0x48, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x52, 0x4f, 0x4c, 0x4c, 0x42, 0x41, 0x43,
	0x4b, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x6e,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x6e, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x70, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x70, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe1, 0x02, 0x0a, 0x1d, 0x43, 0x41, 0x53, 0x48,
	0x5f, 0x41, 0x50, 0x49, 0x5f, 0x52, 0x4f, 0x4c, 0x4c, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x41, 0x43,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x6e,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x6e, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xad, 0x02, 0x0a, 0x17,
	0x43, 0x41, 0x53, 0x48, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x5f,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x6e, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x6e, 0x6f, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x71, 0x70, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x70, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x67,
	0x61, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67,
	0x61, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xdd, 0x02, 0x0a, 0x1b,
	0x43, 0x41, 0x53, 0x48, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x5f,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x65, 0x71, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65,
	0x71, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x66, 0x0a, 0x1c, 0x43,
	0x41, 0x53, 0x48, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x55,
	0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0xa7, 0x02, 0x0a, 0x20, 0x43, 0x41, 0x53, 0x48, 0x5f, 0x41, 0x50, 0x49,
	0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f,
	0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x53, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x41, 0x53, 0x48, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x51,
	0x55, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x4c, 0x49,
	0x53, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x1a, 0x4a, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x32, 0x5a,
	0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x73, 0x79,
	0x61, 0x6f, 0x72, 0x61, 0x6e, 0x35, 0x31, 0x2f, 0x47, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_gate_proto_rawDescOnce sync.Once
	file_protobuf_gate_proto_rawDescData = file_protobuf_gate_proto_rawDesc
)

func file_protobuf_gate_proto_rawDescGZIP() []byte {
	file_protobuf_gate_proto_rawDescOnce.Do(func() {
		file_protobuf_gate_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_gate_proto_rawDescData)
	})
	return file_protobuf_gate_proto_rawDescData
}

var file_protobuf_gate_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_protobuf_gate_proto_goTypes = []interface{}{
	(*ClientConnectRequest)(nil),                          // 0: protobuf.ClientConnectRequest
	(*ClientConnectResponse)(nil),                         // 1: protobuf.ClientConnectResponse
	(*CASH_API_BET_DEDUCT)(nil),                           // 2: protobuf.CASH_API_BET_DEDUCT
	(*CASH_API_BET_DEDUCT_RES)(nil),                       // 3: protobuf.CASH_API_BET_DEDUCT_RES
	(*CASH_API_WIN_ACCOUNT)(nil),                          // 4: protobuf.CASH_API_WIN_ACCOUNT
	(*CASH_API_WIN_ACCOUNT_RES)(nil),                      // 5: protobuf.CASH_API_WIN_ACCOUNT_RES
	(*CASH_API_ROLLBACK_ACCOUNT)(nil),                     // 6: protobuf.CASH_API_ROLLBACK_ACCOUNT
	(*CASH_API_ROLLBACK_ACCOUNT_RES)(nil),                 // 7: protobuf.CASH_API_ROLLBACK_ACCOUNT_RES
	(*CASH_API_CANCEL_ACCOUNT)(nil),                       // 8: protobuf.CASH_API_CANCEL_ACCOUNT
	(*CASH_API_CANCEL_ACCOUNT_RES)(nil),                   // 9: protobuf.CASH_API_CANCEL_ACCOUNT_RES
	(*CASH_API_QUERY_CURRENCY_LIST)(nil),                  // 10: protobuf.CASH_API_QUERY_CURRENCY_LIST
	(*CASH_API_QUERY_CURRENCY_LIST_RES)(nil),              // 11: protobuf.CASH_API_QUERY_CURRENCY_LIST_RES
	(*CASH_API_QUERY_CURRENCY_LIST_RES_CurrencyData)(nil), // 12: protobuf.CASH_API_QUERY_CURRENCY_LIST_RES.CurrencyData
}
var file_protobuf_gate_proto_depIdxs = []int32{
	12, // 0: protobuf.CASH_API_QUERY_CURRENCY_LIST_RES.currency:type_name -> protobuf.CASH_API_QUERY_CURRENCY_LIST_RES.CurrencyData
	1,  // [1:1] is the sub-list for method output_type
	1,  // [1:1] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_protobuf_gate_proto_init() }
func file_protobuf_gate_proto_init() {
	if File_protobuf_gate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protobuf_gate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_gate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientConnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_gate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CASH_API_BET_DEDUCT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_gate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CASH_API_BET_DEDUCT_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_gate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CASH_API_WIN_ACCOUNT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_gate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CASH_API_WIN_ACCOUNT_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_gate_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CASH_API_ROLLBACK_ACCOUNT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_gate_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CASH_API_ROLLBACK_ACCOUNT_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_gate_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CASH_API_CANCEL_ACCOUNT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_gate_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CASH_API_CANCEL_ACCOUNT_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_gate_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CASH_API_QUERY_CURRENCY_LIST); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_gate_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CASH_API_QUERY_CURRENCY_LIST_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_gate_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CASH_API_QUERY_CURRENCY_LIST_RES_CurrencyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_gate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protobuf_gate_proto_goTypes,
		DependencyIndexes: file_protobuf_gate_proto_depIdxs,
		MessageInfos:      file_protobuf_gate_proto_msgTypes,
	}.Build()
	File_protobuf_gate_proto = out.File
	file_protobuf_gate_proto_rawDesc = nil
	file_protobuf_gate_proto_goTypes = nil
	file_protobuf_gate_proto_depIdxs = nil
}
